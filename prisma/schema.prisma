// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

generator dbml {
  provider = "prisma-dbml-generator"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model plans {
  id          String   @id @default(cuid())
  user_id     String
  vision      String
  milestone   String
  completed   Boolean  @default(false)
  start_date  DateTime
  end_date    DateTime
  created     DateTime @default(now())
  last_update DateTime @updatedAt

  goals       goals[]
}

model goals {
  id          String      @id @default(cuid())
  plan_id     String
  content     String
  status      String

  plan        plans        @relation(fields: [plan_id], references: [id], onDelete: Cascade)
  goalHistory goal_history[]
  strategies  strategies[]
  indicators  indicators[]

  @@index([plan_id])
}

model goal_history {
  id         String   @id @default(cuid())
  goal_id    String
  start_date DateTime
  end_date   DateTime

  goal       goals    @relation(fields: [goal_id], references: [id], onDelete: Cascade)

  @@index([goal_id])
}

model strategies {
  id         String        @id @default(cuid())
  goal_id    String
  content    String
  weeks      String
  status     String

  goal       goals         @relation(fields: [goal_id], references: [id], onDelete: Cascade)
  strategyHistory strategy_history[]

  @@index([goal_id])
}

model strategy_history {
  id            String   @id @default(cuid())
  strategy_id   String
  overdue       Boolean  @default(false)
  completed     Boolean  @default(false)
  first_update  DateTime?
  last_update   DateTime?

  strategy      strategies @relation(fields: [strategy_id], references: [id], onDelete: Cascade)

  @@index([strategy_id])
}

model indicators {
  id              String             @id @default(cuid())
  goal_id         String
  content         String
  metric          String
  starting_value  Int
  goal_value      Int
  status          String

  goal            goals              @relation(fields: [goal_id], references: [id], onDelete: Cascade)
  indicatorHistory indicator_history[]

  @@index([goal_id])
}

model indicator_history {
  id            String     @id @default(cuid())
  indicator_id  String
  value         Int

  indicator     indicators @relation(fields: [indicator_id], references: [id], onDelete: Cascade)

  @@index([indicator_id])
}

model notifications {
  id          String   @id @default(cuid())
  user_id     String
  entity_type String
  entity_id   String
  type        String
  message     String
  status      String
  send_date   DateTime
  created     DateTime @default(now())
  last_update DateTime @updatedAt


  @@index([entity_type, entity_id])
}
